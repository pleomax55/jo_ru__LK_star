//

:root {
  --input-h: 50px;
  --input-border-w: 1px;
  --input-margin-b: 8px;
  --input-margin-r: 4px;
  --btn-h: 50px;
  --btn-border-w: 1px;
  --btn-margin-r: 4px;
  --btn-margin-b: 8px;
}

.lk-content {
  a {
    color: $tC;
  }
}

.lk-edit-this {
  &:hover {
    cursor: pointer;
    position: relative;
    box-shadow: 0 0 0 4px #f7f8fc, 0 0 0 6px rgba($pC, 0.66);

    &:before {
      content: url("data:image/svg+xml,%3Csvg width='16' height='16' aria-hidden='true' focusable='false' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23ffc240' d='M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z'%3E%3C/path%3E%3C/svg%3E");
      display: flex;
      align-items: center;
      justify-content: center;
      width: 20px;
      height: 20px;
      position: absolute;
      top: 0;
      right: 0;
      font-size: 0;
      z-index: 100;
    }
  }
}

@mixin lk_btns {
  border: var(--btn-border-w, 1px) solid $pC;
  background: $pC;
  min-width: 200px;
  min-height: var(--btn-h, 50px);
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: $hC;
  padding: 5px 15px;
  font-weight: 500;
  font-size: 16px;
  line-height: 20px;
  border-radius: 8px;
  outline: none !important;
  transition-property: background, color, border, box-shadow;
  transition-duration: 266ms;

  margin-right: var(--btn-margin-r, 0px);
  margin-bottom: var(--btn-margin-b, 0px);

  &.w-auto {
    min-width: auto;
    width: auto;
  }
  &.no-margin {
    margin: 0;
  }
  &.fw {
    width: 100%;
  }
  &.white {
    background: #fff;
  }
  &:hover {
    background-color: rgba($pC, 0.55);
  }
  &:focus {
    box-shadow: 0 0 0 3px rgba($pC, 0.38);
  }
}

input[type="button"],
input[type="submit"] {
  @include lk_btns;
}
.lk-btn {
  @include lk_btns;

  &-group {
    max-width: 100%;
    display: inline-flex;

    margin-bottom: var(--btn-margin-b, 0px);

    > .lk-btn {
      margin: 0;
      border-radius: 0;
      &:not(:first-child) {
        border-left-width: 0;
      }
      &:first-child {
        border-right-width: 1px;
        border-top-left-radius: 8px;
        border-bottom-left-radius: 8px;
      }
      &:last-child {
        border-left-width: 0;
        border-top-right-radius: 8px;
        border-bottom-right-radius: 8px;
      }
    }
    &.column {
      flex-direction: column;
      // flex-wrap: wrap;
      > .lk-btn {
        margin-bottom: 0;
        border-radius: 0;
        border-left-width: var(--btn-border-w, 1px);
        &:not(:first-child) {
          border-top-width: 0;
        }
        &:first-child {
          border-right-width: var(--btn-border-w, 1px);
          border-bottom-width: 1px;
          border-top-left-radius: 8px;
          border-top-right-radius: 8px;
        }
        &:last-child {
          border-left-width: var(--btn-border-w, 1px);
          border-top-width: 0;
          border-bottom-left-radius: 8px;
          border-bottom-right-radius: 8px;
        }
      }
    }
  }
}

button {
  &.no-style {
    min-height: auto;
    min-width: auto;
    background-color: transparent;
    border: 0;
    border-radius: 0;
    padding: 0;
    margin: 0;
    outline: none !important;
  }
}

textarea.lk-text,
textarea {
  padding-top: 10px;
  padding-bottom: 10px;
  line-height: 20px;
}

.lk-text {
  padding: 0 10px;
  line-height: var(--input-h, 48px);
  font-family: sans-serif;
  outline: none !important;
  border: var(--input-border-w, 1px) solid #c4c4c4;
  box-sizing: border-box;
  border-radius: 8px;

  transition: box-shadow 266ms;

  margin-right: var(--input-margin-r, 0);
  margin-bottom: var(--input-margin-b, 0);

  &:focus {
    border-color: $pC;
    box-shadow: 0 0 0 3px rgba($pC, 0.38);
  }
  &:disabled {
    background-color: #fff;
    cursor: not-allowed;
  }

  &.error {
    border-color: #f00;
    &:focus {
      border-color: #f00;
      box-shadow: 0 0 0 3px rgba(#f00, 0.38);
    }
  }
  &.success {
    border-color: #45da4c;
    &:focus {
      border-color: #45da4c;
      box-shadow: 0 0 0 3px rgba(#45da4c, 0.38);
    }
  }

  &-label {
    display: inline-flex;
    flex-direction: column;
    max-width: 100%;
    margin-right: var(--input-margin-r, 0);
    margin-bottom: var(--input-margin-b, 0);
    > * {
      margin: 0;
    }
    label {
      padding: 8px 12px;
      font-weight: 600;
      font-size: 18px;
      line-height: 22px;
    }
    &.w-100 {
      > *,
      > * > * {
        width: 100%;
      }
    }

    &.complete {
      position: relative;
      display: inline-flex;
      max-width: 100%;
      margin-right: var(--input-margin-r, 0);
      margin-bottom: var(--input-margin-b, 0);
      > * {
        margin: 0;
        padding-right: 35px;
      }

      &:before {
        content: url("data:image/svg+xml,%3Csvg width='25' height='25' viewBox='0 0 25 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='12.5' cy='12.5' r='12' stroke='%2372C850'/%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M16.8536 9.15771C17.0488 9.36799 17.0488 9.70893 16.8536 9.91921L11.3536 15.8423C11.1583 16.0526 10.8417 16.0526 10.6464 15.8423L8.14645 13.15C7.95118 12.9397 7.95118 12.5988 8.14645 12.3885C8.34171 12.1782 8.65829 12.1782 8.85355 12.3885L11 14.7L16.1464 9.15771C16.3417 8.94743 16.6583 8.94743 16.8536 9.15771Z' fill='%2372C850'/%3E%3C/svg%3E");
        display: flex;
        align-items: center;
        justify-content: center;
        width: 25px;
        height: 25px;
        position: absolute;
        top: 50%;
        right: 6px;
        transform: translateY(-50%);
        font-size: 0;
        z-index: 100;
      }
    }
  }
}

.lk-edit-link {
  text-align: right;
  a {
    padding: 0px 8px;
    font-size: 16px;
    line-height: 20px;
    color: #9c9c9c;
  }
}

.lk-box-label {
  display: inline-flex;
  flex-wrap: wrap;
  max-width: 100%;
  margin-right: var(--input-margin-r, 0);
  margin-bottom: var(--input-margin-b, 0);
  > * {
    margin: 0;
  }
  label {
    display: block;
    width: 100%;
    padding: 8px 12px;
    font-weight: 600;
    font-size: 18px;
    line-height: 22px;
  }
}

.lk-slider {
  position: relative;
  padding: 10px;
  * {
    outline: none !important;
  }
  .noUi-target {
    cursor: pointer;
    background: transparent;
    border-radius: 0;
    border: 0;
    box-shadow: none;
  }
  .noUi-connects {
    height: 3px;
    background-color: #ececec;
    position: relative;
    top: 5px;
  }
  .noUi-horizontal {
    height: 14px;
  }
  .noUi-tooltip {
    bottom: 130%;
  }
  .noUi-handle {
    cursor: grab;
    width: 24px;
    height: 24px;
    border-color: $pC;
    background-color: $pC;
    border-radius: 50px;
    box-shadow: none;
    transition-property: background, color, border, box-shadow;
    transition-duration: 266ms;
    &:before,
    &:after {
      display: none;
    }
    &:focus {
      box-shadow: 0 0 0 3px rgba($pC, 0.38);
    }
  }

  &--lines {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 10px;
    width: calc(100% - 10px * 2);
    height: 100%;
    > div {
      display: flex;
      position: absolute;
      top: 2px;
      left: 0;
      width: 3px;
      height: calc(100% - 4px);
      background-color: #ececec;
    }
  }
}

.lk-star-rating {
  --star-size: 36px;
  --star-color: #{$grayC};
  --star-background: #{$pC};
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: 1.2rem 0;

  .r-stars {
    --rating: 0;
    --percent: calc(var(--rating) / 5 * 100%);
    display: inline-block;
    font-size: var(--star-size);
    font-family: Times; // make sure ★ appears correctly
    line-height: 1;
    &::before {
      content: "★★★★★";
      letter-spacing: 3px;
      background: linear-gradient(90deg, var(--star-background) var(--percent), var(--star-color) var(--percent));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    &-num {
      display: inline-block;
      margin-top: 4px;
      line-height: 26px;
      margin-left: 10px;
      color: #707070;
    }
  }
}

.lk-tags {
  &-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }
  &--item {
    display: block;
    background: #ececec;
    border-radius: 5px;
    padding: 2px 8px;

    margin-bottom: 8px;

    &:not(:last-child) {
      margin-right: 16px;
    }
    &.active {
      background-color: $pC;
    }
  }
  i {
    font-style: normal;
    margin-right: 6px;
  }
}

.lk-modal {
  &--container {
    display: none;
    border: 1px solid #707070;
    border-radius: 10px;
    padding: 30px 35px 35px;
  }

  &--header-text {
    font-weight: 600;
    font-size: 25px;
    line-height: 30px;
    color: #707070;
    margin-bottom: 20px;
  }

  + .fancybox-close-small {
    padding: 5px;
  }
}

// *** checkbox & radio
.lk-cr-inputs {
  position: relative;
  margin-bottom: var(--input-margin-b, 0);

  input[type="checkbox"],
  input[type="radio"] {
    position: absolute;
    top: 0;
    left: 0;

    & + label {
      margin-left: 0;
      padding-left: 34px;
    }
  }
  &.switch {
    input[type="checkbox"],
    input[type="radio"] {
      & + label {
        margin-left: 0;
        padding-left: 50px;
      }
    }
  }

  &.inline {
    display: inline-block;
  }
}
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type="checkbox"],
  input[type="radio"] {
    --active: #fff;
    --active-inner: #{$pC};
    --focus: 2px rgba(0, 0, 0, 0);
    --border: #{$grayC};
    --border-hover: #{$pC};
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 24px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 2px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    &:after {
      content: "";
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    }
    &:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: 0.3s;
      --d-t: 0.6s;
      --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
    }
    &:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: 0.9;
      &:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
      }
      & + label {
        cursor: not-allowed;
      }
    }
    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          --bc: var(--border-hover);
        }
      }
    }
    &:focus {
      border-color: rgba($pC, 0.68);
      box-shadow: 0 0 0 3px rgba($pC, 0.38);
    }
    &:not(.switch) {
      width: 24px;
      &:after {
        opacity: var(--o, 0);
      }
      &:checked {
        --o: 1;
        border-color: var(--border-hover);
      }
    }
    & + label {
      font-size: 16px;
      line-height: 24px;
      display: inline-block;
      vertical-align: top;
      cursor: pointer;
      margin: 1px 15px -1px 5px;

      a {
        cursor: help;
        position: relative;
        display: inline-block;
        &:after {
          content: "";
          display: block;
          position: absolute;
          top: 100%;
          left: 0;
          width: 100%;
          height: 2px;
          background-color: $pC;
          transition: all 0.08s;
        }
        &:hover:after {
          top: calc(100% - 2px);
        }
      }
    }
  }
  input[type="checkbox"] {
    &:not(.switch) {
      border-radius: 7px;
      &:after {
        width: 8px;
        height: 12px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 6px;
        top: 2px;
        transform: rotate(var(--r, 44deg)) skewX(7deg);
      }
      &:checked {
        --r: 44deg;
      }
    }
    &.switch {
      width: 42px;
      border-radius: 11px;
      &:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: 16px;
        height: 16px;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
      }
      &:checked {
        --ab: var(--active-inner);
        --x: 17px;
        border-color: var(--border-hover);
      }
      &:disabled {
        &:not(:checked) {
          &:after {
            opacity: 0.6;
          }
        }
      }
    }
  }
  input[type="radio"] {
    border-radius: 50%;
    &:after {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: var(--active-inner);
      opacity: 0;
      transform: scale(var(--s, 0.7));
    }
    &:checked {
      --s: 0.5;
    }
  }
}

.lk-filters {
  &--order-sort,
  &--order-type {
    a.selected:before {
      background: $pC;
    }
  }
  &--order-sort {
    padding: 10px 15px;
    > * {
      cursor: pointer;
      display: block;
      white-space: nowrap;

      &:not(:last-child) {
        margin-bottom: 10px;
      }
    }
    &--dropdown {
      .dropdown-toggle {
        cursor: pointer;
        &:after {
          display: none;
        }
      }
    }
  }
  &--order-type {
    display: flex;
    flex-wrap: wrap;
    a {
      cursor: pointer;
      margin-top: 5px !important;
      margin-bottom: 5px !important;
      &:not(:last-child) {
        margin-right: 10px;
      }
    }
  }
  &--order-search {
    position: relative;
    &-input {
      margin: 0;
      line-height: 30px;
      padding-left: 35px;
    }
    &-loop {
      color: #9c9c9c;
    }
    &-times,
    &-loop {
      width: 25px;
      height: 30px;
      padding: 5px 0;
      position: absolute;
      top: 1px;
      left: 5px;
      z-index: 10;
      display: none;
      font-size: 0;
      > * {
        width: 100%;
        height: 100%;
      }
    }
    &.has-val &-times {
      display: flex;
      cursor: pointer;
    }
    &:not(.has-val) &-loop {
      display: flex;
    }
  }
}
